<launch>

  <arg name="robot_model"                       default=""/>
  <arg name="robot_name"                        default="locobot"/>
  <arg name="arm_model"                         default="$(eval 'mobile_' + arg('robot_model').split('_')[1])"/>
  <arg name="show_lidar"                        default="false"/>
  <arg name="show_gripper_bar"                  default="true"/>
  <arg name="show_gripper_fingers"              default="true"/>
  <arg name="external_urdf_loc"                 default=""/>
  <arg name="use_rviz"                          default="false"/>
  <arg name="rviz_frame"                        default="$(arg robot_name)/base_footprint"/>
  <arg name="world_name"                        default="$(find interbotix_xslocobot_gazebo)/worlds/xslocobot_gazebo.world"/>
  <arg name="gui"                               default="true"/>
  <arg name="debug"                             default="false"/>
  <arg name="paused"                            default="true"/>
  <arg name="recording"                         default="false"/>
  <arg name="use_sim_time"                      default="true"/>
  <arg name="use_position_controllers"          default="false"/>
  <arg name="use_trajectory_controllers"        default="false"/>
  <arg name="dof"                               default="5"/>

  <env name="GAZEBO_RESOURCE_PATH"              value="$(find interbotix_xslocobot_gazebo)"/>

  <rosparam file="$(find interbotix_xslocobot_gazebo)/config/locobot_gazebo_controllers.yaml" command="load" ns="$(arg robot_name)"/>

  <group if="$(eval robot_model != 'locobot_base')">

    <group if="$(arg use_trajectory_controllers)">
      <rosparam file="$(find interbotix_xslocobot_gazebo)/config/trajectory_controllers/$(arg arm_model)_trajectory_controllers.yaml" command="load" ns="$(arg robot_name)"/>
      <node
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn arm_controller gripper_controller pan_controller tilt_controller joint_state_controller"/>
    </group>

    <group if="$(arg use_position_controllers)">
      <rosparam file="$(find interbotix_xslocobot_gazebo)/config/position_controllers/$(arg arm_model)_position_controllers.yaml" command="load" ns="$(arg robot_name)"/>

      <node if="$(eval dof == 4)"
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn joint_state_controller waist_controller shoulder_controller
                    elbow_controller wrist_angle_controller left_finger_controller
                    right_finger_controller pan_controller tilt_controller"/>

      <node if="$(eval dof == 5)"
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn joint_state_controller waist_controller shoulder_controller
                    elbow_controller wrist_angle_controller wrist_rotate_controller
                    left_finger_controller right_finger_controller pan_controller
                    tilt_controller"/>

      <node if="$(eval dof == 6)"
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn joint_state_controller waist_controller shoulder_controller
                    elbow_controller forearm_roll_controller wrist_angle_controller
                    wrist_rotate_controller left_finger_controller right_finger_controller
                    pan_controller tilt_controller"/>
    </group>

  </group>

  <node unless="$(eval robot_model != 'locobot_base')"
    name="controller_spawner"
    pkg="controller_manager"
    type="controller_manager"
    respawn="false"
    output="screen"
    ns="$(arg robot_name)"
    args="spawn pan_controller tilt_controller joint_state_controller"/>

  <include file="$(find interbotix_xslocobot_descriptions)/launch/xslocobot_description.launch">
    <arg name="robot_model"                       value="$(arg robot_model)"/>
    <arg name="robot_name"                        value="$(arg robot_name)"/>
    <arg name="show_lidar"                        value="$(arg show_lidar)"/>
    <arg name="show_gripper_bar"                  value="$(arg show_gripper_bar)"/>
    <arg name="show_gripper_fingers"              value="$(arg show_gripper_fingers)"/>
    <arg name="external_urdf_loc"                 value="$(arg external_urdf_loc)"/>
    <arg name="use_rviz"                          value="$(arg use_rviz)"/>
    <arg name="rviz_frame"                        value="$(arg rviz_frame)"/>
  </include>

</launch>
